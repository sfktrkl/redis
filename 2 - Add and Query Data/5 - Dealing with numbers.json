{
  "id": "b9d152",
  "fileName": "5 - Dealing with numbers.json",
  "name": "5 - Dealing with numbers",
  "cells": [
    {
      "id": "5bf7eb",
      "type": "markdown",
      "content": "**Notes**\n\n* Add some notes here\n* Use markdown"
    },
    { "id": "5d65be", "type": "redis", "content": "SET age 20\nGET age" },
    { "id": "1696123962617", "type": "redis", "content": "INCR age" },
    { "id": "1696123978610", "type": "redis", "content": "DECR age" },
    { "id": "1696124006519", "type": "redis", "content": "INCRBY age 10" },
    { "id": "1696124019796", "type": "redis", "content": "DECRBY age 10" },
    {
      "id": "1696124032718",
      "type": "redis",
      "content": "INCRBYFLOAT age 10.056"
    },
    {
      "id": "1696124044442",
      "type": "redis",
      "content": "INCRBYFLOAT age -10.056"
    },
    {
      "id": "1696124212594",
      "type": "markdown",
      "content": "## Two round trips\n\nThink about two requests received at the same time. Two API servers will get a the current data, and set it independently which may cause a data to be lost.\n\n## Three possible solutions\n- Use Redis transaction with `Watch`\n- Use a lock\n- Use INCR\n\nRedis is synchronous and single threaded hence processes all command synchronously."
    }
  ],
  "createdAt": "2023-10-01T01:31:00.166Z"
}
